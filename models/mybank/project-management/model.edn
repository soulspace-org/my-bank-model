;;;;
;;;; MyBank Project Management and Development Domain Model
;;;;
#{;
  ;;;
  ;;; Organization
  ;;;
  {:el :org-unit
   :id :mybank.project-management/project-management-unit
   :name "Projects"
   :desc "Responsible for MyBank Projects"}

  {:el :contained-in
   :id :mybank.project-management/project-management-unit-contained-in-my-bank-organization
   :from :mybank.project-management/project-management-unit
   :to :mybank/my-bank-organization
   :name "unit of"
   :desc "Project Management unit is part of MyBank."}

  ;;;
  ;;; Roles
  ;;;
  {:el :person
   :id :mybank.project-management/project-manager
   :name "Project Manager"
   :desc "Manages projects at MyBank"}

  {:el :person
   :id :mybank.project-management/devops-engineer
   :name "DevOps Engineer"
   :desc "Develops and operates software systems"}

  {:el :person
   :id :mybank.project-management/agility-master
   :name "Agility Master"
   :desc "Facilitates agile practices"}

  {:el :person
   :id :mybank.project-management/incident-manager
   :name "Incident Manager"
   :desc "Manages incidents"}

  {:el :person
   :id :mybank.project-management/quality-manager
   :name "Quality Manager"
   :desc "Responsible for quality assurance and compliance to quality standards"}

  {:el :capability
   :id :mybank.project-management/manage-projects
   :name "Manage Projects"
   :desc "Capability to manage projects for the organization"}

  {:el :process
   :id :mybank.project-management/project-management
   :name "Project Management"
   :desc "Process to manage projects"}

  {:el :process
   :id :mybank.project-management/requirements-management
   :name "Requirements Management"
   :desc "Process to manage requirements for projects"}

  {:el :role-in
   :id :mybank.project-management/project-manager-has-role-in-project-management
   :from :mybank.project-management/project-manager
   :to :mybank.project-management/project-management-unit
   :name "role in"
   :desc "Manages projects"}

  {:el :process
   :id :mybank.project-management/software-development
   :name "Software Development"
   :desc "Process to develop software"}

  {:el :role-in
   :id :mybank.project-management/devops-engineer-has-role-in-software-development
   :from :mybank.project-management/devops-engineer
   :to :mybank.project-management/software-development
   :name "role in"
   :dasc "Develops software"}

  {:el :role-in
   :id :mybank.project-management/agility-master-has-role-in-software-development
   :from :mybank.project-management/agility-master
   :to :mybank.project-management/software-development
   :name "role in"
   :desc "Facilitates agile practices"}

  {:el :process
   :id :mybank.project-management/test-management
   :name "Test Management"
   :desc "Process to manage testing"}

  {:el :process
   :id :mybank.project-management/config-management
   :name "Config Management"
   :desc "Process to manage configurations and baselines"}

  {:el :role-in
   :id :mybank.project-management/devops-engineer-has-role-in-config-management
   :from :mybank.project-management/devops-engineer
   :to :mybank.project-management/config-management
   :name "role in"
   :desc "manages configurations"}

  {:el :process
   :id :mybank.project-management/release-management
   :name "Release Management"
   :desc "Process to manage software releases"}

  {:el :process
   :id :mybank.project-management/incident-management
   :name "Incident Management"
   :desc "Process to manage incidents"}

  {:el :required-for
   :id :mybank.project-management/project-management-required-for-manage-projects
   :from :mybank.project-management/project-management
   :to :mybank.project-management/manage-projects
   :name "required for"
   :desc "Process required for capability"}

  {:el :responsible-for
   :id :mybank.project-management/project-management-unit-responsible-for-manage-projects
   :from :mybank.project-management/project-management-unit
   :to :mybank.project-management/manage-projects
   :name "responsible for"
   :desc "Project management unit manages projects"}

  ;;;
  ;;; Use Cases
  ;;;
  {:el :use-case
   :id :mybank.project-management/document-project
   :name "Document Project"
   :desc "Document a project"}
  {:el :use-case
   :id :mybank.project-management/manage-backlog
   :level :summary
   :name "Manage Backlog"
   :desc "Manage the backlog of user stories"}
  {:el :use-case
   :id :mybank.project-management/manage-sprints
   :name "Manage Sprints"
   :desc "Manage sprints for software development"}

  {:el :uses
   :id :mybank.project-management/agility-master-uses-manage-sprints
   :from :mybank.project-management/agility-master
   :to :mybank.project-management/manage-sprints
   :name "uses"
   :desc ""}

  ;;;
  ;;; System Architecture
  ;;;
  {:el :context-boundary
   :id :mybank.project-management/context-boundary
   :name "Project Management and Development"
   :desc "Tools for managing projects and software development."
   :ct #{{:el :system
          :id :mybank.project-management/jira
          :name "Project Management Tool"
          :desc "Platform for planning, executing, and tracking projects."
          :tech "Jira"}
         {:el :system
          :id :mybank.project-management/confluence
          :name "Projects Wiki"
          :desc "Platform for documenting projects."
          :tech "Confluence"}
         {:el :system
          :id :mybank.project-management/gitlab
          :name "Development Platform"
          :desc "Tools for software development, testing, and deployment."
          :tech "GitLab"}}}

  ;
  }

